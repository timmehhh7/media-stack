---
# ==============================================================================
# MEDIA STACK DOCKER COMPOSE
# ==============================================================================
# A comprehensive media automation and management stack featuring:
# - Media Acquisition: Sonarr, Radarr, NZBGet
# - Media Serving: Plex, Tdarr (transcoding)
# - Request Management: Overseerr, Maintainerr
# - Monitoring: Tautulli
# - Automation: n8n
# - Authentication: Authentik (SSO)
# - Reverse Proxy: Traefik with Let's Encrypt
# - Home Automation: Home Assistant, Homebridge
# ==============================================================================

# ------------------------------------------------------------------------------
# NETWORKS
# ------------------------------------------------------------------------------
networks:
  proxy:
    external: true
    name: proxy
  media:
    driver: bridge
  backend:
    driver: bridge

# ------------------------------------------------------------------------------
# SERVICES
# ------------------------------------------------------------------------------
services:
  # ============================================================================
  # REVERSE PROXY & NETWORKING
  # ============================================================================
  
  traefik:
    image: "traefik:v3.4"
    container_name: "traefik"
    restart: unless-stopped
    user: "500:100"
    group_add:
      - "1001"
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - TZ="America/Eastern"
      - UID=500
      - GID=100
    security_opt:
      - no-new-privileges:true
    command:
      # Providers
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=proxy
      # EntryPoints
      - --entryPoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=le-dns
      # API / Dashboard
      - --api.dashboard=true
      - --api.insecure=false
      - --api=true
      # ACME / Let's Encrypt (DNS-01 with Cloudflare)
      - --certificatesresolvers.le-dns.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le-dns.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le-dns.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le-dns.acme.dnschallenge.delayBeforeCheck=10
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      # Dashboard (secured with basic auth)
      - "traefik.http.routers.traefik.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le-dns"
      - "traefik.http.routers.traefik.service=api@internal"
      # Basic auth middleware
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_USERS}"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/APPS/traefik/letsencrypt:/letsencrypt

  ddclient:
    image: ghcr.io/linuxserver/ddclient
    container_name: ddclient
    restart: unless-stopped
    environment:
      - PUID=500
      - PGID=100
    networks:
      - media
    volumes:
      - /mnt/APPS/ddclient:/config

  # ============================================================================
  # AUTHENTICATION & SSO
  # ============================================================================

  authentik-postgres:
    image: postgres:16
    container_name: authentik-postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=${AUTHENTIK_DB_NAME}
      - POSTGRES_USER=${AUTHENTIK_DB_USER}
      - POSTGRES_PASSWORD=${AUTHENTIK_DB_PASSWORD}
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
    networks:
      - backend
    volumes:
      - /mnt/APPS/authentik/database:/var/lib/postgresql/data

  authentik-redis:
    image: redis:alpine
    container_name: authentik-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - backend
    command: --save 60 1 --loglevel warning

  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-postgres
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_DB_NAME:-authentik}
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_DB_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DB_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=false
      - AUTHENTIK_DISABLE_UPDATE_CHECK=false
      - AUTHENTIK_DISABLE_STARTUP_ANALYTICS=true
      - AUTHENTIK_AVATARS=initials
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
    networks:
      - backend
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.authentik.rule=Host(`auth.${BASE_DOMAIN}`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls=true"
      - "traefik.http.routers.authentik.tls.certresolver=le-dns"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
    volumes:
      - /mnt/APPS/authentik/media:/media
      - /mnt/APPS/authentik/custom-templates:/templates
    depends_on:
      - authentik-postgres
      - authentik-redis

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-postgres
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_DB_NAME}
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_DB_USER}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DB_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=false
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
    networks:
      - backend
    volumes:
      - /mnt/APPS/authentik/media:/media
      - /mnt/APPS/authentik/certs:/certs
      - /mnt/APPS/authentik/custom-templates:/templates
    depends_on:
      - authentik-postgres
      - authentik-redis

  # ============================================================================
  # MEDIA ACQUISITION & DOWNLOAD
  # ============================================================================

  nzbget:
    image: linuxserver/nzbget:version-v21.1
    container_name: nzbget
    restart: unless-stopped
    networks:
      - media
    volumes:
      - "/mnt/APPS/nzbget:/config"
      - "/mnt/MEDIA/Downloads:/downloads"
      - "/mnt/MEDIA/Downloads/complete:/downloads/complete"
    ports:
      - 27020:6789
    environment:
      - PUID=500
      - PGID=100

  sonarr:
    image: linuxserver/sonarr:4.0.15
    container_name: sonarr
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
    depends_on:
      - nzbget
    networks:
      - media
    volumes:
      - "/mnt/APPS/sonarr:/config"
      - "/mnt/MEDIA/TV:/tv"
      - "/mnt/MEDIA/Downloads/complete/Series:/downloads"
    ports:
      - 27021:8989
    links:
      - nzbget
    environment:
      - PUID=500
      - PGID=100

  radarr:
    image: linuxserver/radarr:5.27.5
    container_name: radarr
    restart: unless-stopped
    depends_on:
      - nzbget
    networks:
      - media
    volumes:
      - "/mnt/APPS/radarr:/config"
      - "/mnt/MEDIA/Movies:/movies"
      - "/mnt/MEDIA/Downloads/complete/Movies:/downloads"
    ports:
      - 27022:7878
    links:
      - nzbget
    environment:
      - PUID=500
      - PGID=100

  # ============================================================================
  # MEDIA SERVING & TRANSCODING
  # ============================================================================

  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    restart: unless-stopped
    volumes:
      - "/home/tim/PlexConfig:/config"
      - "/mnt/MEDIA/Transcode:/transcode"
      - "/mnt/MEDIA:/data"
    network_mode: host
    hostname: fairweatherflix
    environment:
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
    devices:
      - /dev/dri:/dev/dri

  tdarr:
    image: haveagitgat/tdarr
    container_name: tdarr
    restart: unless-stopped
    ports:
      - "8265:8265" # WebUI
      - "8266:8266" # Node communications
    environment:
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
      - serverIP=10.88.111.202
      - serverPort=8266
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=7
      - nodeName=Krypton
      - nodeHardwareEncoding=true
      - LIBVA_DRIVER_NAME=iHD
      - FFMPEG_HWACCEL_ARGS=-hwaccel qsv -qsv_device /dev/dri/renderD128
    networks:
      - media
    volumes:
      - /mnt/APPS/tdarr/server:/app/server
      - /mnt/APPS/tdarr/logs:/app/logs
      - /mnt/APPS/tdarr/configs:/app/configs
      - /mnt/MEDIA:/media
      - /mnt/tdarr-cache:/temp
    group_add:
      - "44"
      - "993"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0

  # ============================================================================
  # MEDIA REQUESTS & MONITORING
  # ============================================================================

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
      - PORT=5055
    ports:
      - 5055:5055
    volumes:
      - /mnt/APPS/overseerr:/app/config
    networks:
      - proxy
      - media
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.overseerr.rule=Host(`requests.${BASE_DOMAIN}`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.routers.overseerr.tls.certresolver=le-dns"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"

  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:latest
    container_name: maintainerr
    restart: unless-stopped
    user: "500:100"
    environment:
      - TZ=America/Eastern
    ports:
      - 27024:6246
    volumes:
      - /mnt/APPS/maintainerr:/opt/data
    networks:
      - media
      - proxy

  tautulli:
    image: linuxserver/tautulli:2.16.0
    container_name: tautulli
    restart: unless-stopped
    depends_on:
      - plex
    networks:
      - media
    volumes:
      - "/mnt/APPS/tautulli:/config"
      - "/home/tim/PlexConfig/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro"
    ports:
      - 27023:8181
    environment:
      - PUID=500
      - PGID=100

  # ============================================================================
  # AUTOMATION & WORKFLOWS
  # ============================================================================

  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=${N8N_DB_USER}
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD}
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
    networks:
      - backend
    volumes:
      - /mnt/n8n-pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_HOST=automate.thefairweathers.ca
      - N8N_PORT=5678
      - N8N_RUNNERS_ENABLED=true
      - N8N_PROXY_HOPS=1
      - N8N_PROTOCOL=https
      - N8N_EMAIL_MODE=smtp
      - N8N_SMTP_HOST=smtp-relay.brevo.com
      - N8N_SMTP_PORT=587
      - N8N_SMTP_USER=${SMTP_USER}
      - N8N_SMTP_PASS=${SMTP_PASSWORD}
      - N8N_SMTP_SENDER="n8n <noreply@thefairweathers.ca>"
      - N8N_SMTP_SSL=false
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${N8N_DB_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      - NODE_ENV=production
      - WEBHOOK_URL=https://automate.thefairweathers.ca
      - N8N_EDITOR_BASE_URL=https://automate.thefairweathers.ca
      - TZ=America/Toronto
      - GENERIC_TIMEZONE=America/Toronto
      - PUID=500
      - PGID=100
    networks:
      - backend
      - media
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.n8n.rule=Host(`automate.${BASE_DOMAIN}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=le-dns"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    volumes:
      - /mnt/APPS/n8n:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  # ============================================================================
  # HOME AUTOMATION
  # ============================================================================

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    environment:
      - TZ="America/Eastern"
      - PUID=500
      - PGID=100
    network_mode: host
    volumes:
      - /mnt/APPS/homeassistant:/config

  homebridge:
    image: oznu/homebridge:latest
    container_name: homebridge
    restart: unless-stopped
    network_mode: host
    environment:
      - TZ="America/Eastern"
      - PGID=100
      - PUID=500
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
    volumes:
      - /mnt/APPS/homebridge:/homebridge